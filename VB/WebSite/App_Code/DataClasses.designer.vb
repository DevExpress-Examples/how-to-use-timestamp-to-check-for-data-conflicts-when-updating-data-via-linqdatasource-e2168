'TODO: INSTANT VB TODO TASK: There is no equivalent to #pragma directives in VB.NET:
'#pragma warning disable 1591
'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.4927
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------


Imports Microsoft.VisualBasic
Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection

<System.Data.Linq.Mapping.DatabaseAttribute(Name:="LinqConcurrency")> _
Partial Public Class DataClassesDataContext
	Inherits System.Data.Linq.DataContext
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertDemoTable(ByVal instance As DemoTable)
  End Sub
  Partial Private Sub UpdateDemoTable(ByVal instance As DemoTable)
  End Sub
  Partial Private Sub DeleteDemoTable(ByVal instance As DemoTable)
  End Sub
  #End Region

	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("LinqConcurrencyConnectionString").ConnectionString, mappingSource)
		OnCreated()
	End Sub

	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated()
	End Sub

	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated()
	End Sub

	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated()
	End Sub

	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated()
	End Sub

	Public ReadOnly Property DemoTables() As System.Data.Linq.Table(Of DemoTable)
		Get
			Return Me.GetTable(Of DemoTable)()
		End Get
	End Property
End Class

<Table(Name:="dbo.DemoTable")> _
Partial Public Class DemoTable
	Implements INotifyPropertyChanging, INotifyPropertyChanged
	Private Shared emptyChangingEventArgs As New PropertyChangingEventArgs(String.Empty)

	Private _ID As Integer

	Private _Value As String

	Private _TimeStamp As System.Data.Linq.Binary

	#Region "Extensibility Method Definitions"
	Partial Private Sub OnLoaded()
	End Sub
	Partial Private Sub OnValidate(ByVal action As System.Data.Linq.ChangeAction)
	End Sub
	Partial Private Sub OnCreated()
	End Sub
	Partial Private Sub OnIDChanging(ByVal value As Integer)
	End Sub
	Partial Private Sub OnIDChanged()
	End Sub
	Partial Private Sub OnValueChanging(ByVal value As String)
	End Sub
	Partial Private Sub OnValueChanged()
	End Sub
	Partial Private Sub OnTimeStampChanging(ByVal value As System.Data.Linq.Binary)
	End Sub
	Partial Private Sub OnTimeStampChanged()
	End Sub
	#End Region

	Public Sub New()
		OnCreated()
	End Sub

	<Column(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True, UpdateCheck:=UpdateCheck.Never)> _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set(ByVal value As Integer)
			If (Me._ID <> value) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging()
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged()
			End If
		End Set
	End Property

	<Column(Storage:="_Value", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=False, UpdateCheck:=UpdateCheck.Never)> _
	Public Property Value() As String
		Get
			Return Me._Value
		End Get
		Set(ByVal value As String)
			If (Me._Value <> value) Then
				Me.OnValueChanging(value)
				Me.SendPropertyChanging()
				Me._Value = value
				Me.SendPropertyChanged("Value")
				Me.OnValueChanged()
			End If
		End Set
	End Property

	<Column(Storage:="_TimeStamp", AutoSync:=AutoSync.Always, DbType:="rowversion NOT NULL", CanBeNull:=False, IsDbGenerated:=True, IsVersion:=True, UpdateCheck:=UpdateCheck.Always)> _
	Public Property TimeStamp() As System.Data.Linq.Binary
		Get
			Return Me._TimeStamp
		End Get
		Set(ByVal value As System.Data.Linq.Binary)
			If (Me._TimeStamp IsNot value) Then
				Me.OnTimeStampChanging(value)
				Me.SendPropertyChanging()
				Me._TimeStamp = value
				Me.SendPropertyChanged("TimeStamp")
				Me.OnTimeStampChanged()
			End If
		End Set
	End Property

	Public Event PropertyChanging As PropertyChangingEventHandler Implements INotifyPropertyChanging.PropertyChanging

	Public Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged

	Protected Overridable Sub SendPropertyChanging()
		If (Me.PropertyChangingEvent IsNot Nothing) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub

	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As String)
		If (Me.PropertyChangedEvent IsNot Nothing) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
'TODO: INSTANT VB TODO TASK: There is no equivalent to #pragma directives in VB.NET:
'#pragma warning restore 1591